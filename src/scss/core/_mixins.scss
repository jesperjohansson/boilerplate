// 
// Clearfix
// --------------------------
@mixin clearfix {
  &:before, 
  &:after {
    content: ' ';
    display: table;
  }

  &:after {
    clear: both;
  }
}


// 
// Breakpoints
// --------------------------
@mixin breakpoint($value) {

  $bp: nth($value, 1);
  $dir: if(length($value) > 1, nth($value, 2), down);
  
  @if $dir == 'down' {
    @if type-of($bp) == 'number' and unit($bp) == 'px' {
      @media only screen and (max-width: $bp) { 
        @content; 
      }
    }
    @else if map-has-key($tweakpoints, $bp) {
      @media only screen and (max-width: map-get($tweakpoints, $bp)) { 
        @content; 
      }
    }
    @else if map-has-key($breakpoints, $bp) {
      @media only screen and (max-width: map-get($breakpoints, $bp)) { 
        @content; 
      }
    }
    @else {
      @warn "Could not find point in $tweakpoints or $breakpoints.";
    }
  } 
  @else if $dir == 'up' {
    @if type-of($bp) == 'number' and unit($bp) == 'px' {
      @media only screen and (min-width: $bp) { 
        @content; 
      }
    }
    @else if map-has-key($tweakpoints, $bp) {
      @media only screen and (min-width: map-get($tweakpoints, $bp)) { 
        @content; 
      }
    }
    @else if map-has-key($breakpoints, $bp) {
      @media only screen and (min-width: map-get($breakpoints, $bp)) { 
        @content; 
      }
    }
    @else {
      @warn "Could not find point in $tweakpoints or $breakpoints.";
    }
  }

}

// 
// Grid
// --------------------------

@mixin grid-column($value: 12) {

  $val: nth($value, 1);
  @if length($value) > 2 {
    $grid-columns-width: (100 / nth($value, 3));
  }
  
  @if unitless($val) {
    width: unquote("#{$grid-columns-width * $val}%");
  } 
  @else if type-of($val) == 'number' and unit($val) == '%' {
    width: $val
  }
  @else {
    @warn "Parameter must be an interger!";
  }

  @extend .grid__column;

}
